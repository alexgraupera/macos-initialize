#!/usr/bin/env bash

LOG_FILE=${LOG_FILE:-$HOME/initialization.log}
export INITIALIZATION_ENV=${INITIALIZATION_ENV:-PROD}
export INITIALIZATION_INSTALLER=true

red='\033[0;31m'
green='\033[0;32m'
purple='\033[0;35m'
normal='\033[0m'

_w() {
	local -r text="${1-}"
	echo -e "$text"
}
_a() { _w " > $1"; }
_e() { _a "${red}$1${normal}"; }
_s() { _a "${green}$1${normal}"; }
_q() { read -rp "ðŸ¤” $1 : " "$2"; }
_pk() { read -rp "Press a key to ${1}... ðŸ‘‡" "REPLY"; }

_log() {
	log_name="$1"
	current_date=$(date "+%Y-%m-%d %H:%M:%S")

	touch "$LOG_FILE"
	echo "----- $current_date - $log_name -----" >>"$LOG_FILE"

	while IFS= read -r log_message; do
		echo "$log_message" >>"$LOG_FILE"
	done

	echo "" >>"$LOG_FILE"
}

current_timestamp() { date +%s; }

backup_dotfiles_dir() {
	if [ -d "${1-}" ]; then
		local -r backup_path="$1.$(current_timestamp).back"

		_e "The path '$1' already exist"
		_s "Creating a backup in '$backup_path'"

		mv "$1" "$backup_path"
	else
		_a "Ok! dotfiles will be located in: ${purple}$DOTFILES_PATH${normal}"
	fi

	[[ -n ${1-} ]] && mkdir -p "$(dirname "${1-}")"
}

command_exists() {
	type "$1" >/dev/null 2>&1
}

install_brew_osx() {
	if [[ $OSTYPE =~ ^[darwin] ]] && ! command_exists brew; then
		_w "Installing brew package manager for macOS ðŸ’¾"
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	fi
}

package_install() {
	install_brew_osx #Without this it will try to use apt
	# Because apt that is not package manager exists on macOS

	if command_exists dnf; then
		_a "Installing '${*}' using dnf"
		sudo dnf -y install "${*}" >/dev/null 2>&1 | _log "Installing '${*}' using dnf"
	elif command_exists yum; then
		_a "Installing '${*}' using yum"
		yes | sudo yum install "${*}" >/dev/null 2>&1 | _log "Installing '${*}' using yum"
	elif command_exists brew; then
		_a "Installing '${*}' using brew"
		yes | brew install "${*}" 2>&1 | _log "Installign '${*}' using brew"
	elif command_exists pacman; then
		_a "Installing '${*}' using pacman"
		sudo pacman -S --noconfirm "${*}" >/dev/null 2>&1 | _log "Installign '${*}' using pacman"
	elif command_exists apt; then
		_a "Installing '${*}' using apt"
		sudo apt -y install "${*}" >/dev/null 2>&1 | _log "Installign '${*}' using apt"
	else
		_e "Could not install '${*}', no package provider found"
		return 1
	fi

	return 0
}